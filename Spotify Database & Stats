--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 
 
--Create Spotify table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--Then I inserted the Spotify Data .csv into the table.
--Next, I explored the data using the following SQL. 

select * from spotifydata;

--Which artist has the most tracks on the Top 50?
select artist_name as Top_1, count(artist_name) as frequency
from spotifydata
group by Top_1
order by frequency desc
limit 1;

--Create a table to transfer the song keys ID to actual song keys(alphabetical).
CREATE TABLE BIT_DB.SongKeySpotifyData (
id integer primary key,
song_key varchar not null);
--I made a CSV file in Excel with the data, alt way to insert data into table shown below
insert into SongKeySpotifyData (
id, song_key)
values 
(0, 'B'),
(1, 'C'),
(2, 'C#/D-Flat'),
(3, 'D'),
(4, 'D#/F-Flat'),
(5, 'E'),
(6, 'F'),
(7, 'F#/G-Flat'),
(8, 'G'),
(9, 'G#/A-Flat'),
(10, 'A'),
(11, 'A#/B-Flat');

select * from SongKeySpotifyData;
--Which song's are in the key of D and F#/G-Flat?
select sd.track_name, sk.song_key
from spotifydata sd
left join SongKeySpotifyData sk
on sk.id = sd.song_key
where sk.song_key = 'D' or sk.song_key = 'F#/G-Flat'
order by sd.track_name;

--I determined the avg popularity, danceability, and energy by artist and track. 
select artist_name, track_name, avg(popularity), avg(danceability), avg(energy)
from spotifydata
group by artist_name, track_name;

--Who the Top 10 artists are by popularity?
select track_name, artist_name, popularity
from spotifydata
order by popularity desc
limit 10;

/*Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an 
average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.*/
with TopStarTable_CTE as (
select artist_name, avg(popularity) as pop
from spotifydata
group by artist_name)
select artist_name, pop, 'Top Star' as tag
from TopStarTable_CTE
where pop >= 90; 


